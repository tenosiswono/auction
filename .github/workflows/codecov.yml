name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install-deps:
    name: Install dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm install
      - name: Cache dependencies
        uses: actions/cache@v1
        id: cache-deps
        with:
          path: "."
          key: ${{ github.sha }}

  lint:
    name: ESLint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    needs: install-deps
    steps:
      - name: Restore cached dependencies
        uses: actions/cache@v1
        id: restore-deps
        with:
          path: "."
          key: ${{ github.sha }}
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Lint files
        run: npm run lint
        env:
          CI: true
  test:
    name: Unit and integration tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    needs: install-deps
    steps:
      - name: Restore cached dependencies
        uses: actions/cache@v1
        id: restore-deps
        with:
          path: "."
          key: ${{ github.sha }}
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run Vitest
        run: npm run coverage
        env:
          CI: true

      - name: Upload code coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
